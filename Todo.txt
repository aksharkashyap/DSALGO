(1 to 3)
detect loop in linkedlist- all algorithms 
angle b/w hands of a clock
graph clone
cycle detection directed/undirected graph using BFS
iterative inorder,preorder,postorder
-----------------------
np, np hard, np complete etc
stability analysis of sort algos
---------------------
mobile numeric problem
nuts and bolts problem
knapsack with duplicate items
infix to postfix
rotton oranges
generate gray code sequences
excel sheet problem
pairs of prime number
egg dropping puzzle
reverse first k elemnts of queue
queue reversal
bit differnece
min num of swaps required to sort an array


// some tope questions companywise
https://www.geeksforgeeks.org/must-coding-questions-company-wise/?ref=leftbar-rightbar#amazon

//Target
1) pre,in,post iterative traversal
2) bfs without using queue
4) clockwise spiral traversal of binary tree
5) reverse clockwise spiral traversal of binary tree
6) reverse anti clockwise spiral traversal of binary tree
7) reverse zigzag traversal of binary tree
8) Level order traversal in spiral form | Using Deque



//TODO (ans link) https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree/discuss/143798/1ms-beat-100-simple-Java-dfs-with(without)-hashmap-including-explanation
https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree/



Q-> doubly linkedlist using single pointer

Q-> Difference between Comparator and Comparable. Given a user-defined class Employee and list of employees, 
sort the list according to the age of employees. What you will use to sort, comparator or comparable and Why? 
How will you decide when to use comparable and when to use comparator

Q-> Internal working of HashMap in java. When to override equals() and when to override hashCode() method

