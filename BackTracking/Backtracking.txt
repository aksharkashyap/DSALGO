1) The knight's tour problem
2) rat in a maze
3) n-queen problem
4) sudoku
5) boggle
7) mColoring problem
8) hamiltonian cycle
9) remove invalid parenthesis
10) word break problem
11) prime numbers after prime p wth sum s
12) rat in a maze with multiple jumps allowed
13) find path from corner to middle cell in a maze
14) print palindromic partitions strings
15) shortest safe route in a path with landmines
16) print all possible paths from top left to bottom right of mXn matrix
17) match a pattern and string without using regular expression
18) warndorff's algo for knight tour problem
19) genrate n bit gray codes
20) solving cryptarithmetic puzzles
21) magnet puzzle
22) Tug of war
23) permutation of strings
24) subset sum
25) find all subsets

misc---

25) Print all paths from a given source to a destination
26) Fill 8 numbers in grid with given conditions
27) Count all possible paths between two vertices
28) Minimize number of unique characters in string
29) Find if there is a path of more than k length from a source
30) Find Maximum number possible by doing at-most K swaps
31) Prnt all possible strings that can be made by placing spaces
32) Print all longest common sub-sequences in lexicographical order


Backtracking is an algorithmic paradigm that tries different solutions until finds a solution that “works”. 
Problems which are typically solved using backtracking technique have following property in common. 
These problems can only be solved by trying every possible configuration and each configuration is tried only 
once. A Naive solution for these problems is to try all configurations and output a configuration that 
follows given problem constraints. Backtracking works in incremental way and is an 
optimization over the Naive solution where all possible configurations are generated and tried.